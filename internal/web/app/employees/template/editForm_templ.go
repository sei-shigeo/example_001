// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package template

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"project/internal/db"
)

// UpdateEmployee は従業員を更新するフォームを表示します
func EditEmployeeForm(emp *db.Employee) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"grid gap-4\"><button type=\"button\" class=\"bg-primary text-white rounded-md py-1.5 px-4\" data-on-click=\"$editEmployeeForm = false\">閉じる</button><div><label class=\"grid gap-1\"><span><span class=\"text-red-500 align-middle\">*</span> <span>名前</span> <span id=\"editErrorName\" class=\"text-red-500 text-xs\" data-text=\"$employeeEdit.errs.name\"></span></span> <input id=\"editName\" placeholder=\"名前\" required aria-live=\"polite\" aria-describedby=\"editErrorName\" class=\" bg-gray-100 rounded-md p-1 border focus:outline-none focus:ring-1 focus:ring-primary\" type=\"text\" data-bind=\"employeeEdit.name\" data-on-keydown__debounce.500ms=\"@post('/employees/validate?mode=edit')\"></label> <label class=\"grid gap-1\"><span><span class=\"text-red-500 align-middle\">*</span> <span>メールアドレス</span> <span id=\"editErrorEmail\" class=\"text-red-500 text-xs\" data-text=\"$employeeEdit.errs.email\"></span></span> <input id=\"editEmail\" placeholder=\"メールアドレス\" required aria-live=\"polite\" aria-describedby=\"editErrorEmail\" class=\" bg-gray-100 rounded-md p-1 border focus:outline-none focus:ring-1 focus:ring-primary\" type=\"email\" data-bind=\"employeeEdit.email\" data-on-keydown__debounce.500ms=\"@post('/employees/validate?mode=edit')\"></label></div><button class=\" py-1.5 px-4 bg-primary text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\" type=\"button\" data-on-click=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("@patch('/employees/edit/%d')", emp.ID))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/app/employees/template/editForm.templ`, Line: 61, Col: 70}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\">保存</button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
